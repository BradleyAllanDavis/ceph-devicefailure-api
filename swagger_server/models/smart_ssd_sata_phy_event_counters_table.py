# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SmartSsdSataPhyEventCountersTable(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str=None, size: int=None, value: int=None, overflow: bool=None):  # noqa: E501
        """SmartSsdSataPhyEventCountersTable - a model defined in Swagger

        :param id: The id of this SmartSsdSataPhyEventCountersTable.  # noqa: E501
        :type id: int
        :param name: The name of this SmartSsdSataPhyEventCountersTable.  # noqa: E501
        :type name: str
        :param size: The size of this SmartSsdSataPhyEventCountersTable.  # noqa: E501
        :type size: int
        :param value: The value of this SmartSsdSataPhyEventCountersTable.  # noqa: E501
        :type value: int
        :param overflow: The overflow of this SmartSsdSataPhyEventCountersTable.  # noqa: E501
        :type overflow: bool
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'size': int,
            'value': int,
            'overflow': bool
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'size': 'size',
            'value': 'value',
            'overflow': 'overflow'
        }

        self._id = id
        self._name = name
        self._size = size
        self._value = value
        self._overflow = overflow

    @classmethod
    def from_dict(cls, dikt) -> 'SmartSsdSataPhyEventCountersTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmartSsd_sata_phy_event_counters_table of this SmartSsdSataPhyEventCountersTable.  # noqa: E501
        :rtype: SmartSsdSataPhyEventCountersTable
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this SmartSsdSataPhyEventCountersTable.


        :return: The id of this SmartSsdSataPhyEventCountersTable.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this SmartSsdSataPhyEventCountersTable.


        :param id: The id of this SmartSsdSataPhyEventCountersTable.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this SmartSsdSataPhyEventCountersTable.


        :return: The name of this SmartSsdSataPhyEventCountersTable.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SmartSsdSataPhyEventCountersTable.


        :param name: The name of this SmartSsdSataPhyEventCountersTable.
        :type name: str
        """

        self._name = name

    @property
    def size(self) -> int:
        """Gets the size of this SmartSsdSataPhyEventCountersTable.


        :return: The size of this SmartSsdSataPhyEventCountersTable.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size: int):
        """Sets the size of this SmartSsdSataPhyEventCountersTable.


        :param size: The size of this SmartSsdSataPhyEventCountersTable.
        :type size: int
        """

        self._size = size

    @property
    def value(self) -> int:
        """Gets the value of this SmartSsdSataPhyEventCountersTable.


        :return: The value of this SmartSsdSataPhyEventCountersTable.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value: int):
        """Sets the value of this SmartSsdSataPhyEventCountersTable.


        :param value: The value of this SmartSsdSataPhyEventCountersTable.
        :type value: int
        """

        self._value = value

    @property
    def overflow(self) -> bool:
        """Gets the overflow of this SmartSsdSataPhyEventCountersTable.


        :return: The overflow of this SmartSsdSataPhyEventCountersTable.
        :rtype: bool
        """
        return self._overflow

    @overflow.setter
    def overflow(self, overflow: bool):
        """Sets the overflow of this SmartSsdSataPhyEventCountersTable.


        :param overflow: The overflow of this SmartSsdSataPhyEventCountersTable.
        :type overflow: bool
        """

        self._overflow = overflow
