# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SmartSsdAtaSmartErrorLogExtended(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, revision: int=None, sectors: int=None, count: int=None):  # noqa: E501
        """SmartSsdAtaSmartErrorLogExtended - a model defined in Swagger

        :param revision: The revision of this SmartSsdAtaSmartErrorLogExtended.  # noqa: E501
        :type revision: int
        :param sectors: The sectors of this SmartSsdAtaSmartErrorLogExtended.  # noqa: E501
        :type sectors: int
        :param count: The count of this SmartSsdAtaSmartErrorLogExtended.  # noqa: E501
        :type count: int
        """
        self.swagger_types = {
            'revision': int,
            'sectors': int,
            'count': int
        }

        self.attribute_map = {
            'revision': 'revision',
            'sectors': 'sectors',
            'count': 'count'
        }

        self._revision = revision
        self._sectors = sectors
        self._count = count

    @classmethod
    def from_dict(cls, dikt) -> 'SmartSsdAtaSmartErrorLogExtended':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmartSsd_ata_smart_error_log_extended of this SmartSsdAtaSmartErrorLogExtended.  # noqa: E501
        :rtype: SmartSsdAtaSmartErrorLogExtended
        """
        return util.deserialize_model(dikt, cls)

    @property
    def revision(self) -> int:
        """Gets the revision of this SmartSsdAtaSmartErrorLogExtended.


        :return: The revision of this SmartSsdAtaSmartErrorLogExtended.
        :rtype: int
        """
        return self._revision

    @revision.setter
    def revision(self, revision: int):
        """Sets the revision of this SmartSsdAtaSmartErrorLogExtended.


        :param revision: The revision of this SmartSsdAtaSmartErrorLogExtended.
        :type revision: int
        """

        self._revision = revision

    @property
    def sectors(self) -> int:
        """Gets the sectors of this SmartSsdAtaSmartErrorLogExtended.


        :return: The sectors of this SmartSsdAtaSmartErrorLogExtended.
        :rtype: int
        """
        return self._sectors

    @sectors.setter
    def sectors(self, sectors: int):
        """Sets the sectors of this SmartSsdAtaSmartErrorLogExtended.


        :param sectors: The sectors of this SmartSsdAtaSmartErrorLogExtended.
        :type sectors: int
        """

        self._sectors = sectors

    @property
    def count(self) -> int:
        """Gets the count of this SmartSsdAtaSmartErrorLogExtended.


        :return: The count of this SmartSsdAtaSmartErrorLogExtended.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count: int):
        """Sets the count of this SmartSsdAtaSmartErrorLogExtended.


        :param count: The count of this SmartSsdAtaSmartErrorLogExtended.
        :type count: int
        """

        self._count = count
