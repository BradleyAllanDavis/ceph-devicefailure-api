# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.smart_ssd_ata_smart_data_capabilities import SmartSsdAtaSmartDataCapabilities  # noqa: F401,E501
from swagger_server.models.smart_ssd_ata_smart_data_offline_data_collection import SmartSsdAtaSmartDataOfflineDataCollection  # noqa: F401,E501
from swagger_server.models.smart_ssd_ata_smart_data_self_test import SmartSsdAtaSmartDataSelfTest  # noqa: F401,E501
from swagger_server import util


class SmartSsdAtaSmartData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, offline_data_collection: SmartSsdAtaSmartDataOfflineDataCollection=None, self_test: SmartSsdAtaSmartDataSelfTest=None, capabilities: SmartSsdAtaSmartDataCapabilities=None):  # noqa: E501
        """SmartSsdAtaSmartData - a model defined in Swagger

        :param offline_data_collection: The offline_data_collection of this SmartSsdAtaSmartData.  # noqa: E501
        :type offline_data_collection: SmartSsdAtaSmartDataOfflineDataCollection
        :param self_test: The self_test of this SmartSsdAtaSmartData.  # noqa: E501
        :type self_test: SmartSsdAtaSmartDataSelfTest
        :param capabilities: The capabilities of this SmartSsdAtaSmartData.  # noqa: E501
        :type capabilities: SmartSsdAtaSmartDataCapabilities
        """
        self.swagger_types = {
            'offline_data_collection': SmartSsdAtaSmartDataOfflineDataCollection,
            'self_test': SmartSsdAtaSmartDataSelfTest,
            'capabilities': SmartSsdAtaSmartDataCapabilities
        }

        self.attribute_map = {
            'offline_data_collection': 'offline_data_collection',
            'self_test': 'self_test',
            'capabilities': 'capabilities'
        }

        self._offline_data_collection = offline_data_collection
        self._self_test = self_test
        self._capabilities = capabilities

    @classmethod
    def from_dict(cls, dikt) -> 'SmartSsdAtaSmartData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmartSsd_ata_smart_data of this SmartSsdAtaSmartData.  # noqa: E501
        :rtype: SmartSsdAtaSmartData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offline_data_collection(self) -> SmartSsdAtaSmartDataOfflineDataCollection:
        """Gets the offline_data_collection of this SmartSsdAtaSmartData.


        :return: The offline_data_collection of this SmartSsdAtaSmartData.
        :rtype: SmartSsdAtaSmartDataOfflineDataCollection
        """
        return self._offline_data_collection

    @offline_data_collection.setter
    def offline_data_collection(self, offline_data_collection: SmartSsdAtaSmartDataOfflineDataCollection):
        """Sets the offline_data_collection of this SmartSsdAtaSmartData.


        :param offline_data_collection: The offline_data_collection of this SmartSsdAtaSmartData.
        :type offline_data_collection: SmartSsdAtaSmartDataOfflineDataCollection
        """

        self._offline_data_collection = offline_data_collection

    @property
    def self_test(self) -> SmartSsdAtaSmartDataSelfTest:
        """Gets the self_test of this SmartSsdAtaSmartData.


        :return: The self_test of this SmartSsdAtaSmartData.
        :rtype: SmartSsdAtaSmartDataSelfTest
        """
        return self._self_test

    @self_test.setter
    def self_test(self, self_test: SmartSsdAtaSmartDataSelfTest):
        """Sets the self_test of this SmartSsdAtaSmartData.


        :param self_test: The self_test of this SmartSsdAtaSmartData.
        :type self_test: SmartSsdAtaSmartDataSelfTest
        """

        self._self_test = self_test

    @property
    def capabilities(self) -> SmartSsdAtaSmartDataCapabilities:
        """Gets the capabilities of this SmartSsdAtaSmartData.


        :return: The capabilities of this SmartSsdAtaSmartData.
        :rtype: SmartSsdAtaSmartDataCapabilities
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities: SmartSsdAtaSmartDataCapabilities):
        """Sets the capabilities of this SmartSsdAtaSmartData.


        :param capabilities: The capabilities of this SmartSsdAtaSmartData.
        :type capabilities: SmartSsdAtaSmartDataCapabilities
        """

        self._capabilities = capabilities
