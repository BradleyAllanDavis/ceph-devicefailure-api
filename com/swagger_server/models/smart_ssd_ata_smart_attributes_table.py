# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.smart_ssd_ata_smart_attributes_flags import SmartSsdAtaSmartAttributesFlags  # noqa: F401,E501
from swagger_server.models.smart_ssd_ata_smart_data_offline_data_collection_status import SmartSsdAtaSmartDataOfflineDataCollectionStatus  # noqa: F401,E501
from swagger_server import util


class SmartSsdAtaSmartAttributesTable(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str=None, value: int=None, worst: int=None, thresh: int=None, when_failed: str=None, flags: SmartSsdAtaSmartAttributesFlags=None, raw: SmartSsdAtaSmartDataOfflineDataCollectionStatus=None):  # noqa: E501
        """SmartSsdAtaSmartAttributesTable - a model defined in Swagger

        :param id: The id of this SmartSsdAtaSmartAttributesTable.  # noqa: E501
        :type id: int
        :param name: The name of this SmartSsdAtaSmartAttributesTable.  # noqa: E501
        :type name: str
        :param value: The value of this SmartSsdAtaSmartAttributesTable.  # noqa: E501
        :type value: int
        :param worst: The worst of this SmartSsdAtaSmartAttributesTable.  # noqa: E501
        :type worst: int
        :param thresh: The thresh of this SmartSsdAtaSmartAttributesTable.  # noqa: E501
        :type thresh: int
        :param when_failed: The when_failed of this SmartSsdAtaSmartAttributesTable.  # noqa: E501
        :type when_failed: str
        :param flags: The flags of this SmartSsdAtaSmartAttributesTable.  # noqa: E501
        :type flags: SmartSsdAtaSmartAttributesFlags
        :param raw: The raw of this SmartSsdAtaSmartAttributesTable.  # noqa: E501
        :type raw: SmartSsdAtaSmartDataOfflineDataCollectionStatus
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'value': int,
            'worst': int,
            'thresh': int,
            'when_failed': str,
            'flags': SmartSsdAtaSmartAttributesFlags,
            'raw': SmartSsdAtaSmartDataOfflineDataCollectionStatus
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'value': 'value',
            'worst': 'worst',
            'thresh': 'thresh',
            'when_failed': 'when_failed',
            'flags': 'flags',
            'raw': 'raw'
        }

        self._id = id
        self._name = name
        self._value = value
        self._worst = worst
        self._thresh = thresh
        self._when_failed = when_failed
        self._flags = flags
        self._raw = raw

    @classmethod
    def from_dict(cls, dikt) -> 'SmartSsdAtaSmartAttributesTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmartSsd_ata_smart_attributes_table of this SmartSsdAtaSmartAttributesTable.  # noqa: E501
        :rtype: SmartSsdAtaSmartAttributesTable
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this SmartSsdAtaSmartAttributesTable.


        :return: The id of this SmartSsdAtaSmartAttributesTable.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this SmartSsdAtaSmartAttributesTable.


        :param id: The id of this SmartSsdAtaSmartAttributesTable.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this SmartSsdAtaSmartAttributesTable.


        :return: The name of this SmartSsdAtaSmartAttributesTable.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SmartSsdAtaSmartAttributesTable.


        :param name: The name of this SmartSsdAtaSmartAttributesTable.
        :type name: str
        """

        self._name = name

    @property
    def value(self) -> int:
        """Gets the value of this SmartSsdAtaSmartAttributesTable.


        :return: The value of this SmartSsdAtaSmartAttributesTable.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value: int):
        """Sets the value of this SmartSsdAtaSmartAttributesTable.


        :param value: The value of this SmartSsdAtaSmartAttributesTable.
        :type value: int
        """

        self._value = value

    @property
    def worst(self) -> int:
        """Gets the worst of this SmartSsdAtaSmartAttributesTable.


        :return: The worst of this SmartSsdAtaSmartAttributesTable.
        :rtype: int
        """
        return self._worst

    @worst.setter
    def worst(self, worst: int):
        """Sets the worst of this SmartSsdAtaSmartAttributesTable.


        :param worst: The worst of this SmartSsdAtaSmartAttributesTable.
        :type worst: int
        """

        self._worst = worst

    @property
    def thresh(self) -> int:
        """Gets the thresh of this SmartSsdAtaSmartAttributesTable.


        :return: The thresh of this SmartSsdAtaSmartAttributesTable.
        :rtype: int
        """
        return self._thresh

    @thresh.setter
    def thresh(self, thresh: int):
        """Sets the thresh of this SmartSsdAtaSmartAttributesTable.


        :param thresh: The thresh of this SmartSsdAtaSmartAttributesTable.
        :type thresh: int
        """

        self._thresh = thresh

    @property
    def when_failed(self) -> str:
        """Gets the when_failed of this SmartSsdAtaSmartAttributesTable.


        :return: The when_failed of this SmartSsdAtaSmartAttributesTable.
        :rtype: str
        """
        return self._when_failed

    @when_failed.setter
    def when_failed(self, when_failed: str):
        """Sets the when_failed of this SmartSsdAtaSmartAttributesTable.


        :param when_failed: The when_failed of this SmartSsdAtaSmartAttributesTable.
        :type when_failed: str
        """

        self._when_failed = when_failed

    @property
    def flags(self) -> SmartSsdAtaSmartAttributesFlags:
        """Gets the flags of this SmartSsdAtaSmartAttributesTable.


        :return: The flags of this SmartSsdAtaSmartAttributesTable.
        :rtype: SmartSsdAtaSmartAttributesFlags
        """
        return self._flags

    @flags.setter
    def flags(self, flags: SmartSsdAtaSmartAttributesFlags):
        """Sets the flags of this SmartSsdAtaSmartAttributesTable.


        :param flags: The flags of this SmartSsdAtaSmartAttributesTable.
        :type flags: SmartSsdAtaSmartAttributesFlags
        """

        self._flags = flags

    @property
    def raw(self) -> SmartSsdAtaSmartDataOfflineDataCollectionStatus:
        """Gets the raw of this SmartSsdAtaSmartAttributesTable.


        :return: The raw of this SmartSsdAtaSmartAttributesTable.
        :rtype: SmartSsdAtaSmartDataOfflineDataCollectionStatus
        """
        return self._raw

    @raw.setter
    def raw(self, raw: SmartSsdAtaSmartDataOfflineDataCollectionStatus):
        """Sets the raw of this SmartSsdAtaSmartAttributesTable.


        :param raw: The raw of this SmartSsdAtaSmartAttributesTable.
        :type raw: SmartSsdAtaSmartDataOfflineDataCollectionStatus
        """

        self._raw = raw
