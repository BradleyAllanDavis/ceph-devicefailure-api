# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SmartSsdAtaLogDirectoryTable(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, address: int=None, name: str=None, read: bool=None, write: bool=None, gp_sectors: int=None, smart_sectors: int=None):  # noqa: E501
        """SmartSsdAtaLogDirectoryTable - a model defined in Swagger

        :param address: The address of this SmartSsdAtaLogDirectoryTable.  # noqa: E501
        :type address: int
        :param name: The name of this SmartSsdAtaLogDirectoryTable.  # noqa: E501
        :type name: str
        :param read: The read of this SmartSsdAtaLogDirectoryTable.  # noqa: E501
        :type read: bool
        :param write: The write of this SmartSsdAtaLogDirectoryTable.  # noqa: E501
        :type write: bool
        :param gp_sectors: The gp_sectors of this SmartSsdAtaLogDirectoryTable.  # noqa: E501
        :type gp_sectors: int
        :param smart_sectors: The smart_sectors of this SmartSsdAtaLogDirectoryTable.  # noqa: E501
        :type smart_sectors: int
        """
        self.swagger_types = {
            'address': int,
            'name': str,
            'read': bool,
            'write': bool,
            'gp_sectors': int,
            'smart_sectors': int
        }

        self.attribute_map = {
            'address': 'address',
            'name': 'name',
            'read': 'read',
            'write': 'write',
            'gp_sectors': 'gp_sectors',
            'smart_sectors': 'smart_sectors'
        }

        self._address = address
        self._name = name
        self._read = read
        self._write = write
        self._gp_sectors = gp_sectors
        self._smart_sectors = smart_sectors

    @classmethod
    def from_dict(cls, dikt) -> 'SmartSsdAtaLogDirectoryTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmartSsd_ata_log_directory_table of this SmartSsdAtaLogDirectoryTable.  # noqa: E501
        :rtype: SmartSsdAtaLogDirectoryTable
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self) -> int:
        """Gets the address of this SmartSsdAtaLogDirectoryTable.


        :return: The address of this SmartSsdAtaLogDirectoryTable.
        :rtype: int
        """
        return self._address

    @address.setter
    def address(self, address: int):
        """Sets the address of this SmartSsdAtaLogDirectoryTable.


        :param address: The address of this SmartSsdAtaLogDirectoryTable.
        :type address: int
        """

        self._address = address

    @property
    def name(self) -> str:
        """Gets the name of this SmartSsdAtaLogDirectoryTable.


        :return: The name of this SmartSsdAtaLogDirectoryTable.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SmartSsdAtaLogDirectoryTable.


        :param name: The name of this SmartSsdAtaLogDirectoryTable.
        :type name: str
        """

        self._name = name

    @property
    def read(self) -> bool:
        """Gets the read of this SmartSsdAtaLogDirectoryTable.


        :return: The read of this SmartSsdAtaLogDirectoryTable.
        :rtype: bool
        """
        return self._read

    @read.setter
    def read(self, read: bool):
        """Sets the read of this SmartSsdAtaLogDirectoryTable.


        :param read: The read of this SmartSsdAtaLogDirectoryTable.
        :type read: bool
        """

        self._read = read

    @property
    def write(self) -> bool:
        """Gets the write of this SmartSsdAtaLogDirectoryTable.


        :return: The write of this SmartSsdAtaLogDirectoryTable.
        :rtype: bool
        """
        return self._write

    @write.setter
    def write(self, write: bool):
        """Sets the write of this SmartSsdAtaLogDirectoryTable.


        :param write: The write of this SmartSsdAtaLogDirectoryTable.
        :type write: bool
        """

        self._write = write

    @property
    def gp_sectors(self) -> int:
        """Gets the gp_sectors of this SmartSsdAtaLogDirectoryTable.


        :return: The gp_sectors of this SmartSsdAtaLogDirectoryTable.
        :rtype: int
        """
        return self._gp_sectors

    @gp_sectors.setter
    def gp_sectors(self, gp_sectors: int):
        """Sets the gp_sectors of this SmartSsdAtaLogDirectoryTable.


        :param gp_sectors: The gp_sectors of this SmartSsdAtaLogDirectoryTable.
        :type gp_sectors: int
        """

        self._gp_sectors = gp_sectors

    @property
    def smart_sectors(self) -> int:
        """Gets the smart_sectors of this SmartSsdAtaLogDirectoryTable.


        :return: The smart_sectors of this SmartSsdAtaLogDirectoryTable.
        :rtype: int
        """
        return self._smart_sectors

    @smart_sectors.setter
    def smart_sectors(self, smart_sectors: int):
        """Sets the smart_sectors of this SmartSsdAtaLogDirectoryTable.


        :param smart_sectors: The smart_sectors of this SmartSsdAtaLogDirectoryTable.
        :type smart_sectors: int
        """

        self._smart_sectors = smart_sectors
