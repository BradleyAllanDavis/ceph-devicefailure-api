# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SmartNvmeLocalTime(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, time_t: int=None, asctime: str=None):  # noqa: E501
        """SmartNvmeLocalTime - a model defined in Swagger

        :param time_t: The time_t of this SmartNvmeLocalTime.  # noqa: E501
        :type time_t: int
        :param asctime: The asctime of this SmartNvmeLocalTime.  # noqa: E501
        :type asctime: str
        """
        self.swagger_types = {
            'time_t': int,
            'asctime': str
        }

        self.attribute_map = {
            'time_t': 'time_t',
            'asctime': 'asctime'
        }

        self._time_t = time_t
        self._asctime = asctime

    @classmethod
    def from_dict(cls, dikt) -> 'SmartNvmeLocalTime':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmartNvme_local_time of this SmartNvmeLocalTime.  # noqa: E501
        :rtype: SmartNvmeLocalTime
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_t(self) -> int:
        """Gets the time_t of this SmartNvmeLocalTime.


        :return: The time_t of this SmartNvmeLocalTime.
        :rtype: int
        """
        return self._time_t

    @time_t.setter
    def time_t(self, time_t: int):
        """Sets the time_t of this SmartNvmeLocalTime.


        :param time_t: The time_t of this SmartNvmeLocalTime.
        :type time_t: int
        """

        self._time_t = time_t

    @property
    def asctime(self) -> str:
        """Gets the asctime of this SmartNvmeLocalTime.


        :return: The asctime of this SmartNvmeLocalTime.
        :rtype: str
        """
        return self._asctime

    @asctime.setter
    def asctime(self, asctime: str):
        """Sets the asctime of this SmartNvmeLocalTime.


        :param asctime: The asctime of this SmartNvmeLocalTime.
        :type asctime: str
        """

        self._asctime = asctime
