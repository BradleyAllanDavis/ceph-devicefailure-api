# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.smart_ssd_user_capacity_blocks import SmartSsdUserCapacityBlocks  # noqa: F401,E501
from swagger_server.models.smart_ssd_user_capacity_bytes import SmartSsdUserCapacityBytes  # noqa: F401,E501
from swagger_server import util


class SmartSsdUserCapacity(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, blocks: SmartSsdUserCapacityBlocks=None, bytes: SmartSsdUserCapacityBytes=None):  # noqa: E501
        """SmartSsdUserCapacity - a model defined in Swagger

        :param blocks: The blocks of this SmartSsdUserCapacity.  # noqa: E501
        :type blocks: SmartSsdUserCapacityBlocks
        :param bytes: The bytes of this SmartSsdUserCapacity.  # noqa: E501
        :type bytes: SmartSsdUserCapacityBytes
        """
        self.swagger_types = {
            'blocks': SmartSsdUserCapacityBlocks,
            'bytes': SmartSsdUserCapacityBytes
        }

        self.attribute_map = {
            'blocks': 'blocks',
            'bytes': 'bytes'
        }

        self._blocks = blocks
        self._bytes = bytes

    @classmethod
    def from_dict(cls, dikt) -> 'SmartSsdUserCapacity':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmartSsd_user_capacity of this SmartSsdUserCapacity.  # noqa: E501
        :rtype: SmartSsdUserCapacity
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocks(self) -> SmartSsdUserCapacityBlocks:
        """Gets the blocks of this SmartSsdUserCapacity.


        :return: The blocks of this SmartSsdUserCapacity.
        :rtype: SmartSsdUserCapacityBlocks
        """
        return self._blocks

    @blocks.setter
    def blocks(self, blocks: SmartSsdUserCapacityBlocks):
        """Sets the blocks of this SmartSsdUserCapacity.


        :param blocks: The blocks of this SmartSsdUserCapacity.
        :type blocks: SmartSsdUserCapacityBlocks
        """

        self._blocks = blocks

    @property
    def bytes(self) -> SmartSsdUserCapacityBytes:
        """Gets the bytes of this SmartSsdUserCapacity.


        :return: The bytes of this SmartSsdUserCapacity.
        :rtype: SmartSsdUserCapacityBytes
        """
        return self._bytes

    @bytes.setter
    def bytes(self, bytes: SmartSsdUserCapacityBytes):
        """Sets the bytes of this SmartSsdUserCapacity.


        :param bytes: The bytes of this SmartSsdUserCapacity.
        :type bytes: SmartSsdUserCapacityBytes
        """

        self._bytes = bytes
