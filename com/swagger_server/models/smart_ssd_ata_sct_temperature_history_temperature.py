# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SmartSsdAtaSctTemperatureHistoryTemperature(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, op_limit_min: int=None, op_limit_max: int=None, limit_min: int=None, limit_max: int=None):  # noqa: E501
        """SmartSsdAtaSctTemperatureHistoryTemperature - a model defined in Swagger

        :param op_limit_min: The op_limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.  # noqa: E501
        :type op_limit_min: int
        :param op_limit_max: The op_limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.  # noqa: E501
        :type op_limit_max: int
        :param limit_min: The limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.  # noqa: E501
        :type limit_min: int
        :param limit_max: The limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.  # noqa: E501
        :type limit_max: int
        """
        self.swagger_types = {
            'op_limit_min': int,
            'op_limit_max': int,
            'limit_min': int,
            'limit_max': int
        }

        self.attribute_map = {
            'op_limit_min': 'op_limit_min',
            'op_limit_max': 'op_limit_max',
            'limit_min': 'limit_min',
            'limit_max': 'limit_max'
        }

        self._op_limit_min = op_limit_min
        self._op_limit_max = op_limit_max
        self._limit_min = limit_min
        self._limit_max = limit_max

    @classmethod
    def from_dict(cls, dikt) -> 'SmartSsdAtaSctTemperatureHistoryTemperature':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SmartSsd_ata_sct_temperature_history_temperature of this SmartSsdAtaSctTemperatureHistoryTemperature.  # noqa: E501
        :rtype: SmartSsdAtaSctTemperatureHistoryTemperature
        """
        return util.deserialize_model(dikt, cls)

    @property
    def op_limit_min(self) -> int:
        """Gets the op_limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.


        :return: The op_limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.
        :rtype: int
        """
        return self._op_limit_min

    @op_limit_min.setter
    def op_limit_min(self, op_limit_min: int):
        """Sets the op_limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.


        :param op_limit_min: The op_limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.
        :type op_limit_min: int
        """

        self._op_limit_min = op_limit_min

    @property
    def op_limit_max(self) -> int:
        """Gets the op_limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.


        :return: The op_limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.
        :rtype: int
        """
        return self._op_limit_max

    @op_limit_max.setter
    def op_limit_max(self, op_limit_max: int):
        """Sets the op_limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.


        :param op_limit_max: The op_limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.
        :type op_limit_max: int
        """

        self._op_limit_max = op_limit_max

    @property
    def limit_min(self) -> int:
        """Gets the limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.


        :return: The limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.
        :rtype: int
        """
        return self._limit_min

    @limit_min.setter
    def limit_min(self, limit_min: int):
        """Sets the limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.


        :param limit_min: The limit_min of this SmartSsdAtaSctTemperatureHistoryTemperature.
        :type limit_min: int
        """

        self._limit_min = limit_min

    @property
    def limit_max(self) -> int:
        """Gets the limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.


        :return: The limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.
        :rtype: int
        """
        return self._limit_max

    @limit_max.setter
    def limit_max(self, limit_max: int):
        """Sets the limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.


        :param limit_max: The limit_max of this SmartSsdAtaSctTemperatureHistoryTemperature.
        :type limit_max: int
        """

        self._limit_max = limit_max
